    [observer]	CREATE TABLE events (
    [observer]	  id text NOT NULL,
    [observer]	  available_seats integer NOT NULL CHECK (available_seats >= 0),
    [observer]	  PRIMARY KEY (id)
    [observer]	);	(2.1ms)
    [observer]	CREATE TABLE bookings (
    [observer]	  id uuid DEFAULT gen_random_uuid() NOT NULL,
    [observer]	  customer_name text NOT NULL,
    [observer]	  seat_count integer NOT NULL,
    [observer]	  event_id text NOT NULL,
    [observer]	  FOREIGN KEY (event_id) REFERENCES events (id),
    [observer]	  PRIMARY KEY (id)
    [observer]	);	(2.3ms)
    [observer]	BEGIN	(0.7ms)
    [observer]	INSERT INTO "events" ("id", "available_seats") VALUES ('event_a', 2) RETURNING "id"	(1.9ms)
    [observer]	COMMIT	(0.6ms)
    [observer]	SELECT "events"."available_seats" FROM "events" WHERE "events"."id" = 'event_a'	(0.5ms)
    [observer]	=> 2
       [alice]		BEGIN ISOLATION LEVEL READ COMMITTED	(0.5ms)
         [bob]			BEGIN ISOLATION LEVEL READ COMMITTED	(0.4ms)
       [alice]		UPDATE events SET available_seats = available_seats - 1 WHERE id = 'event_a' AND available_seats > 1 RETURNING id	(5.1ms)
       [alice]		=> [{"id" => "event_a"}]
       [alice]		INSERT INTO "bookings" ("customer_name", "seat_count", "event_id") VALUES ('Alice', 1, 'event_a') RETURNING "id"	(3.2ms)
       [alice]		COMMIT	(4.7ms)
         [bob]			UPDATE events SET available_seats = available_seats - 1 WHERE id = 'event_a' AND available_seats > 1 RETURNING id	(922.5ms)
         [bob]			=> []
         [bob]			ROLLBACK	(3.0ms)
    [observer]	SELECT "events"."available_seats" FROM "events" WHERE "events"."id" = 'event_a'	(2.8ms)
    [observer]	=> 1
    [observer]	SELECT SUM("bookings"."seat_count") FROM "bookings"	(2.9ms)
    [observer]	=> 1
    [observer]	DROP TABLE IF EXISTS bookings;	(7.7ms)
    [observer]	DROP TABLE IF EXISTS events;	(7.0ms)
